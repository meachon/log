#include <thread>
#include "log.h"
#include <queue>
#include <iostream>
#include <vld.h>

void thread_1()
{
	while(true)
	{
		LOG(DEBUG_LEVEL, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
		LOG(INFO_LEVEL, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
		LOG(WARN_LEVEL, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
		LOG(ERROR_LEVEL, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
		LOG(CRITIC_LEVEL, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
	}
}


void thread_2()
{
	while(true)
	{
		LOG(DEBUG_LEVEL, "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB");
		LOG(INFO_LEVEL, "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB");
		LOG(WARN_LEVEL, "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB");
		LOG(ERROR_LEVEL, "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB");
		LOG(CRITIC_LEVEL, "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB");
	}

}

void thread_3()
{
	while(true)
	{
		LOG(DEBUG_LEVEL, "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC");
		LOG(INFO_LEVEL, "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC");
		LOG(WARN_LEVEL, "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC");
		LOG(ERROR_LEVEL, "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC");
		LOG(CRITIC_LEVEL, "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC");
	}

}

void thread_4()
{
	while(true)
	{
		LOG(DEBUG_LEVEL, "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
		LOG(INFO_LEVEL, "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
		LOG(WARN_LEVEL, "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
		LOG(ERROR_LEVEL, "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
		LOG(CRITIC_LEVEL, "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD");
	}

}

void thread_5()
{
	while(true)
	{
		LOG(DEBUG_LEVEL, "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE");
		LOG(INFO_LEVEL, "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE");
		LOG(WARN_LEVEL, "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE");
		LOG(ERROR_LEVEL, "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE");
		LOG(CRITIC_LEVEL, "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE");
	}

}



int main()
{
	
	runlog.setLogDirName("log");
	runlog.setLogLevel(1);
	runlog.setLogMaxSize(10);
	runlog.setLogFileCount(10);
	runlog.start();
	
	std::thread th1(thread_1);
	std::thread th2(thread_2);
	std::thread th3(thread_3);
	std::thread th4(thread_4);
	std::thread th5(thread_5);

	/*
	std::queue<int> q;
	q.push(1);
	q.push(2);
	q.push(3);
	q.push(4);
	q.push(5);

	std::cout << "queue size: " << q.size() << std::endl;

	int value = q.front();
	q.pop();

	std::cout << "value: " << value << std::endl;
	std::cout << "queue size: " << q.size() << std::endl;

	q.push(6);
	q.push(7);
	q.push(8);
	q.push(9);
	q.push(10);

	value = q.front();
	q.pop();

	std::cout << "value: " << value << std::endl;
	std::cout << "queue size: " << q.size() << std::endl;
	*/

	//runlog.stop();
	getchar();

	return 0;
}